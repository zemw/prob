## Overview {.unnumbered}

![](chapters/img/normal.png){fig-align="center"}

This book is adapted from *MAT921: Probability* at Southwest University
of Finance and Economics (RIEM). It is an introductory probability
course that aims to be not boring. In this course, we try to blend
**conventional teaching**, **interesting puzzles** and **data-oriented
practical skills**.

Course Instructor's email: [gamma12\@126.com](). Please indicate your
class and student ID when you email me.

## Syllabus

**Topic 1: Classical probabilities\
**How likely were some of your classmates born on the same day as you?

**Topic 2: Data and random variables**\
Why is your exam score in this class a random variable?

**Topic 3: Discrete distributions**\
How many earthquakes are likely to happen in a random year?

**Topic 4: Expectation and variance**\
How old are you expected to live?

**Topic 5: Continuous distributions**\
How long are you expected to wait in the queue at a restaurant?

**Topic 6: Limiting theorems**\
Why a lottery company never loses?

**Topic 7: Sampling distribution**\
How do I know I am taller than an average person?

## Assessment

**Quiz (25%).** There will be an arbitrary number of in-class quizzes.
The date for each quiz will be announced in advance. Each quiz will
consist of 1-2 questions based on material covered in previous weeks.
Every quiz is mandatory; there will be no make-up quizzes under any
circumstances.

**Project (25%).** The goal of the projects is to encourage students to
apply the knowledge learned in this course to solve practical problems.
Projects are usually open-ended and may involve data analysis,
simulations, or exploring real-world applications of probability. Essays
that present innovative perspectives and use the data persuasively to
support their conclusions will receive higher marks. Selective students
may be invited to present their findings to the class.

**Final exam (50%).** The final exam will be a closed-book,
paper-and-pencil exam scheduled for Week 17. It will not simply repeat
lecture material but will assess your ability to apply the knowledge you
have gained to solve novel problems. To perform well, you must have a
deep understanding of the concepts and acquire some degree of
problem-solving skills. The average score of the past exam is 69 with a
standard deviation 15. The pass rate (\>=60) is about 80%.

**Class participation (5%).** Additional 5 marks for class participation
on top of the above. Regular attendance and constructive participation
are are encouraged (though not mandatory) and will be recognized. Active
engagement in class discussions or asking insightful questions will also
be considered.

![](chapters/img/final.jpg){width="80%" fig-align="center"}

## Lecture notes

All lecture materials will be published through this online website. You
are not required to read any textbook. For students who insist on a
textbook, it would be DeGroot and Schervish's *Probability and
Statistics (4th edition).*

It is recommended to use the textbook as a supplement not a replacement
of the lecture note. For students who prefer to read the textbook. There
are two key differences between this lecture note and the textbook.
First, the sections are arranged differently. Second, the examples and
exercises are entirely different despite the key definitions and
theorems are the same.

## Homework

There is no homework assignment in this course. We will do in-class
exercises instead. However, problem solving is essential for learning
math. You are encouraged to practice the exercises in DeGroot and
Schervish's textbook after class. But it is not mandatory.

## Statistical software

Statistical software is indispensable for modern statistics. For
practical consideration, it is beneficial to start learn it as early as
possible. We will demonstrate how to do statistics in R, which is a
widely-used open-source statistical programming language. It is highly
recommended that you try it yourself while learning this course.

## Students' evaluation

If you have not decided whether to enroll in this course or not. Here
are some surveys from the past students for your reference. In general,
this is not an easy course especially for freshmen. We will deal with
serious maths, though I will try to convey the beauty of the subject as
much as possible.

![](chapters/img/wordcloud.png){fig-align="center"}

## Reference

1.  Schervish, M. J., & DeGroot, M. H. (2014). *Probability and
    statistics.* Pearson Education.
2.  Blitzstein, J. K., & Hwang, J. (2019). *Introduction to
    probability.* Chapman and Hall/CRC.
4.  Grimmett, G., & Stirzaker, D. (2020). *Probability and random
    processes.* Oxford University Press.

## Online playground

[Probability Playground: Interactive Probability
Distributions](https://www.acsu.buffalo.edu/~adamcunn/probability/probability.html)

[StatKey: Statistics Unlocking the Power of
Data](https://www.lock5stat.com/StatKey/index.html)

[MathIsFun: Standard Normal Distribution
Table](https://www.mathsisfun.com/data/standard-normal-distribution-table.html)

[Central Limit Theorem Demo](https://projects.oliverni.com/clt/)

## Exam score lookup {.unnumbered}

<div class="exam-score-lookup" id="exam-score-lookup">
<label for="exam-lookup-input" class="exam-lookup-label">Student number</label>
<div class="exam-lookup-controls">
<input id="exam-lookup-input" type="text" inputmode="numeric" placeholder="e.g. 00123" aria-describedby="exam-lookup-status">
<button type="button" id="exam-lookup-button">Find scores</button>
</div>
<p class="exam-lookup-status" id="exam-lookup-status" role="status" aria-live="polite">Loading exam scores...</p>
<div class="exam-lookup-result" id="exam-lookup-result"></div>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const input = document.getElementById('exam-lookup-input');
  const button = document.getElementById('exam-lookup-button');
  const status = document.getElementById('exam-lookup-status');
  const resultContainer = document.getElementById('exam-lookup-result');
  const dataUrl = 'dataset/quiz.csv';
  let headers = [];
  let rows = [];
  let hasLoaded = false;
  let loadError = null;

  const parseCSVRow = (row) => {
    const values = [];
    let current = '';
    let inQuotes = false;
    for (let i = 0; i < row.length; i += 1) {
      const char = row[i];
      if (inQuotes) {
        if (char === '"' && row[i + 1] === '"') {
          current += '"';
          i += 1;
        } else if (char === '"') {
          inQuotes = false;
        } else {
          current += char;
        }
      } else if (char === '"') {
        inQuotes = true;
      } else if (char === ',') {
        values.push(current.trim());
        current = '';
      } else {
        current += char;
      }
    }
    values.push(current.trim());
    return values;
  };

  const parseCSV = (text) => {
    const lines = text
      .split(/\r?\n/)
      .map((line) => line.trim())
      .filter((line) => line.length > 0);
    if (lines.length === 0) {
      return { headers: [], rows: [] };
    }
    const headerRow = parseCSVRow(lines[0]);
    const records = lines.slice(1).map((line) => {
      const values = parseCSVRow(line);
      const record = {};
      headerRow.forEach((header, index) => {
        record[header] = values[index] !== undefined ? values[index] : '';
      });
      return record;
    });
    return { headers: headerRow, rows: records };
  };

  const loadData = async () => {
    if (hasLoaded || loadError) {
      return;
    }
    status.textContent = 'Loading exam scores...';
    try {
      const response = await fetch(dataUrl, { cache: 'no-store' });
      if (!response.ok) {
        throw new Error(`HTTP ${response.status}`);
      }
      const text = await response.text();
      const parsed = parseCSV(text);
      headers = parsed.headers;
      rows = parsed.rows;
      hasLoaded = true;
      if (!headers.length || !rows.length) {
        throw new Error('Exam score file is empty.');
      }
      status.textContent = 'Enter a student number to view exam scores.';
    } catch (error) {
      loadError = error;
      status.textContent = 'Exam score lookup is unavailable. Add "dataset/exam.csv" and reload the page.';
      console.error('Exam lookup failed:', error);
    }
  };

  const matchStudent = (query) => {
    const trimmed = query.trim();
    if (!trimmed) {
      return null;
    }
    const idHeader = headers.find((header) => /id/i.test(header));
    if (idHeader) {
      const match = rows.find(
        (row) => String(row[idHeader]).trim().toLowerCase() === trimmed.toLowerCase(),
      );
      if (match) {
        return match;
      }
    }
    return rows.find((row) =>
      Object.values(row).some(
        (value) => String(value).trim().toLowerCase() === trimmed.toLowerCase(),
      ),
    );
  };

  const renderResult = (record, query) => {
    resultContainer.innerHTML = '';
    if (!record) {
      const message = document.createElement('p');
      message.className = 'exam-lookup-message';
      message.textContent = `No exam scores found for "${query}".`;
      resultContainer.appendChild(message);
      return;
    }

    const table = document.createElement('table');
    table.className = 'exam-lookup-table';

    const thead = document.createElement('thead');
    const headerRow = document.createElement('tr');
    headers.forEach((header) => {
      const th = document.createElement('th');
      th.textContent = header;
      headerRow.appendChild(th);
    });
    thead.appendChild(headerRow);
    table.appendChild(thead);

    const tbody = document.createElement('tbody');
    const dataRow = document.createElement('tr');
    headers.forEach((header) => {
      const td = document.createElement('td');
      const value = record[header];
      td.textContent = value !== undefined && value !== '' ? value : 'â€”';
      dataRow.appendChild(td);
    });
    tbody.appendChild(dataRow);
    table.appendChild(tbody);

    resultContainer.appendChild(table);
  };

  const handleLookup = async () => {
    const query = input.value;
    if (!query.trim()) {
      status.textContent = 'Please enter a student number before searching.';
      resultContainer.innerHTML = '';
      return;
    }

    if (!hasLoaded && !loadError) {
      await loadData();
    }

    if (loadError) {
      status.textContent = 'Exam score lookup is unavailable. Add "dataset/exam.csv" and reload the page.';
      return;
    }

    const match = matchStudent(query);
    if (match) {
      status.textContent = 'Showing results.';
    } else {
      status.textContent = 'No matching student found.';
    }
    renderResult(match, query.trim());
  };

  button.addEventListener('click', handleLookup);
  input.addEventListener('keyup', (event) => {
    if (event.key === 'Enter') {
      handleLookup();
    }
  });

  loadData();
});
</script>

<style>
.exam-score-lookup {
  margin-top: 2.5rem;
  padding: 1.5rem;
  border: 1px solid #e0e0e0;
  border-radius: 0.75rem;
  background-color: #f8f9fa;
}

.exam-lookup-label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.25rem;
}

.exam-lookup-controls {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75rem;
  margin-bottom: 0.75rem;
}

.exam-lookup-controls input[type="text"] {
  flex: 1 1 220px;
  min-width: 160px;
  padding: 0.5rem 0.75rem;
  border: 1px solid #ced4da;
  border-radius: 0.5rem;
  font-size: 1rem;
}

.exam-lookup-controls button {
  padding: 0.5rem 1.25rem;
  border: none;
  border-radius: 0.5rem;
  background-color: #0d6efd;
  color: #fff;
  font-size: 1rem;
  cursor: pointer;
}

.exam-lookup-controls button:hover,
.exam-lookup-controls button:focus {
  background-color: #0b5ed7;
}

.exam-lookup-status {
  margin: 0 0 0.75rem;
  color: #495057;
}

.exam-lookup-table {
  width: 100%;
  border-collapse: collapse;
}

.exam-lookup-table th,
.exam-lookup-table td {
  padding: 0.5rem 0.75rem;
  border: 1px solid #dee2e6;
  text-align: left;
}

.exam-lookup-message {
  margin: 0;
  color: #c1121f;
  font-weight: 600;
}

@media (max-width: 600px) {
  .exam-lookup-controls {
    flex-direction: column;
    align-items: stretch;
  }

  .exam-lookup-controls button {
    width: 100%;
  }
}
</style>

## Copyright Â©

The content on this website is made available for online viewing by the
public. Redistribution, reproduction, or any other use of the content,
in whole or in part, is prohibited without prior written permission from
the author.
